spring:
  application:
    name: homework
  # 데이터베이스 연결을 위한 설정
  security:
    oauth2:
      client:
        registration:
          google:
            client-id: 
            client-secret: 
            scope: profile, email
          naver: #naver OAuth 설정 값
            # application 인증
            client-id: 
            client-secret: 
            
            # user 인증 후처리 파트 (naver 로그인 콜백 URL)
            # naver 인증 후 인증 정보를 아래 URL로 돌려준다.
            redirect-uri: http://localhost:8080/login/oauth2/code/naver
            # naver application 인증 방식 설정
            authorization-grant-type: authorization_code
            # 사용자의 정보를 받아오는 범위 설정 (naver 사용자의 이름과 이메일을 전달 받는다.)
            scope: name, email
            # OAuth 서버 제공자를 식별할 수 있는 이름
            client-name: naver
        provider:
          naver:  # naver OAuth 인증 토큰 발급 및 검증.
            # 사용자가 인증을 할 URL 설정
            authorization-uri: https://nid.naver.com/oauth2.0/authorize
            # 네이버 사용자의 개인정보에 접근할 수 있는 OAuth Token을 발급받을 URL 
            token-uri: https://nid.naver.com/oauth2.0/token
            # 발급받은 Token을 이용해서 naver 사용자의 개인정보를 취득할 수 있는 
            user-info-uri: https://openapi.naver.com/v1/nid/me
            # scope 정보가 들어있는 키의 이름( reponse.name, response.email 로 접근 해야함.)
            user-name-attribute: response

  #데이터베이스 연결을 위한 설정
  datasource:
    url: jdbc:oracle:thin:@localhost:1521:XE
    driver-class-name: oracle.jdbc.driver.OracleDriver
    username: SPRING_BOOT
    password: 1234
  # JSP를 사용하기 위해 JSP 파일들의 경로를 설정 -> WebConfig.java로 설정 이동
#  mvc:
#    view:
#      prefix: /WEB-INF/views/
#      suffix: .jsp
  # 파일 업로드 용량 제한에 대한 설정(Byte 단위)
  servlet:
    multipart:
      # 애플리케이션이 받을 수 있는 최대 업로드 용량에 대한 설정(100MB)
      max-file-size: 104857600
      # 한 사용자가 업로드 할 수 있는 최대 업로드 용량에 대한 설정(10MB)
      max-request-size: 10485760
  # mybatis 설정 파일의 경로 지정
mybatis:
  # mybatis-config.xml 파일의 위치를 지정
  config-location: classpath:mybatis/mybatis-config.xml
  # classpath -> target 폴더의 classes 폴더
  mapper-locations: classpath:com/ktdsuniversity/edu/hello_spring/**/dao/mapper/*Mapper.xml

# Application 전용 설정 (Spring과 관계 없음)
app:
  jwt:
    issuer: hello-spring-security
    secret-key: spring-security-secret-key-random-token-key
  multipart:
    base-dir: /Users/moomin/Downloads/uploadfiles
    # 파일명 난독화 설정
    obfuscation:
      enable: true
      # 파일 확장자 가릴 것인지 설정
      hide-ext:
        enable: true
  interceptors:
    add-access-log:
      path-patterns: /**
      exclude-path-patterns:
        /js/**,
        /css/**,
        /image/**
